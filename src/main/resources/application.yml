spring:
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:guest}
    password: ${RABBITMQ_PASSWORD:guest}

  datasource:
    url: ${garmindb}
    username: ${darmindb_user}
    password: ${darmindb_password}
    hikari:
      connection-timeout: 30000
      maximum-pool-size: 10
  jpa:
    hibernate:
      ddl-auto: validate
      naming:
        physical-strategy: me.sathish.runswithshedlock.config.RunswithshedlockNamingStrategy
    open-in-view: false
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
        id:
          new_generator_mappings: true
  session:
    jdbc.initialize-schema: always
error:
  handling:
    http-status-in-json-response: true
    exception-logging: NO_LOGGING
    full-stacktrace-http-statuses: 5xx
    log-levels:
      5xx: ERROR
    http-statuses:
      org.springframework.security.authorization.AuthorizationDeniedException: unauthorized
    codes:
      RunnerUsernameUnique: RUNNER_USERNAME_UNIQUE
      RunnerEmailUnique: RUNNER_EMAIL_UNIQUE
management:
  endpoints:
    web:
      exposure:
        include: health
  endpoint:
    health:
      show-details: always
springdoc:
  pathsToMatch: /home, /api/**
server:
  port: 9080

garminrun-event:
  garmin-exchange: garminrun-event-exchange
  garmin-newrun-queue: garminrun-newrun-queue
  garmin-error-queue: garminrun-error-queue
runswithshedlock:
  processRunEvents:
    fixedRate: 10000